{"input": {"messages": [{"role": "user", "content": "Navigate to the login page at https://example.com/login"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.goto('https://example.com/login');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.navigate();"}]}
{"input": {"messages": [{"role": "user", "content": "Click the 'Sign In' button"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Sign In' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill the email input field with 'user@example.com'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Email').fill('user@example.com');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill the password field with 'secret123'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Password').fill('secret123');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that the page title is 'Dashboard'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page).toHaveTitle('Dashboard');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that the welcome message is visible"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('Welcome')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click on the menu item with text 'Settings'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByText('Settings').click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Select 'Large' option from the size dropdown"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Large' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that the 'Save' button is disabled"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('button', { name: 'Save' })).toBeDisabled();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check if the error message 'Invalid credentials' appears"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('Invalid credentials')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for the page to load completely"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.waitForLoadState('networkidle');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.wait();"}]}
{"input": {"messages": [{"role": "user", "content": "Set viewport size to 1024x768"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.setViewportSize({ width: 1024, height: 768 });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.resize();"}]}
{"input": {"messages": [{"role": "user", "content": "Take a screenshot and save it as 'login-page.png'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.screenshot({ path: 'login-page.png' });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.capture();"}]}
{"input": {"messages": [{"role": "user", "content": "Hover over the profile avatar"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('profile-avatar').hover();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Double-click on the file name to edit"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByText('filename.txt').dblclick();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Press the Enter key"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.keyboard.press('Enter');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.type();"}]}
{"input": {"messages": [{"role": "user", "content": "Type 'Hello World' into the text editor"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.keyboard.type('Hello World');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.type();"}]}
{"input": {"messages": [{"role": "user", "content": "Clear the search input field"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByPlaceholder('Search...').clear();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Check that the checkbox is checked"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('checkbox')).toBeChecked();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Uncheck the 'Remember me' checkbox"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Remember me').uncheck();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Select 'Red' from the color picker dropdown"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Color').selectOption('Red');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Upload a file to the file input"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Upload file').setInputFiles('path/to/file.pdf');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify the page URL contains '/dashboard'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page).toHaveURL(/.*\\/dashboard/);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that exactly 5 items are displayed in the list"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('listitem')).toHaveCount(5);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for the loading spinner to disappear"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('loading-spinner').waitFor({ state: 'hidden' });"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Right-click on the table row to open context menu"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('row').first().click({ button: 'right' });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Scroll to the bottom of the page"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.evaluate(() => window.scrollTo(0, document.body.scrollHeight));"}], "non_preferred_output": [{"role": "assistant", "content": "await page.execute();"}]}
{"input": {"messages": [{"role": "user", "content": "Mock API response for GET /api/users with empty array"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.route('**/api/users', route => route.fulfill({ json: [] }));"}], "non_preferred_output": [{"role": "assistant", "content": "await page.mock();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that the table contains the text 'John Doe'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('table')).toContainText('John Doe');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click the third item in the navigation menu"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('navigation').getByRole('link').nth(2).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill form field 'First Name' with 'Alice'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('First Name').fill('Alice');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Select multiple options 'Option A' and 'Option C' from multiselect"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Options').selectOption(['Option A', 'Option C']);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that an alert dialog appears with message 'Success'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "page.on('dialog', dialog => { expect(dialog.message()).toBe('Success'); dialog.accept(); });"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Close the modal dialog by clicking the X button"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('dialog').getByLabel('Close').click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Drag element from source to target location"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('source').dragTo(page.getByTestId('target'));"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for element with text 'Processing...' to appear"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByText('Processing...').waitFor();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Check that input field has placeholder text 'Enter your name'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('textbox')).toHaveAttribute('placeholder', 'Enter your name');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify button has class 'btn-primary'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('button')).toHaveClass(/btn-primary/);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click link that opens in new tab"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const [newPage] = await Promise.all([context.waitForEvent('page'), page.getByText('Open in new tab').click()]);"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Focus on the email input field"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Email').focus();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that element is not visible"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('hidden-element')).not.toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check if element is attached to DOM"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('element')).toBeAttached();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Reload the current page"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.reload();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Go back to previous page"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.goBack();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Go forward to next page"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.goForward();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for navigation to complete after clicking"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await Promise.all([page.waitForNavigation(), page.getByText('Submit').click()]);"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Set input value using JavaScript"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Amount').evaluate(el => el.value = '100');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Get text content from an element"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const text = await page.getByTestId('message').textContent();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Verify element contains specific CSS value"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('header')).toHaveCSS('color', 'rgb(255, 0, 0)');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click button and wait for API response"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await Promise.all([page.waitForResponse('**/api/save'), page.getByText('Save').click()]);"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Login user with credentials from environment variables"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Username').fill(process.env.TEST_USER!); await page.getByLabel('Password').fill(process.env.TEST_PASS!);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that dropdown menu is expanded"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('menu')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Close dropdown by pressing Escape key"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.keyboard.press('Escape');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.type();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that form validation error appears"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('This field is required')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Scroll element into view"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('footer').scrollIntoViewIfNeeded();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Switch to iframe content"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const frame = page.frameLocator('iframe[name=\"content\"]');"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Click element within specific iframe"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.frameLocator('iframe').getByRole('button', { name: 'Submit' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Verify page has no accessibility violations"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page).toHaveNoViolations();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that image is loaded"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('img', { name: 'Profile picture' })).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Test responsive design by changing viewport"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.setViewportSize({ width: 375, height: 667 });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.resize();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify mobile menu is visible on small screen"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('mobile-menu')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Add cookie for user session"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await context.addCookies([{ name: 'session', value: 'abc123', domain: 'example.com' }]);"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Clear all cookies"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await context.clearCookies();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Check local storage contains specific value"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const value = await page.evaluate(() => localStorage.getItem('user-pref'));"}], "non_preferred_output": [{"role": "assistant", "content": "await page.execute();"}]}
{"input": {"messages": [{"role": "user", "content": "Set local storage item"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.evaluate(() => localStorage.setItem('theme', 'dark'));"}], "non_preferred_output": [{"role": "assistant", "content": "await page.execute();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify page title matches expected value"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page).toHaveTitle(/Dashboard.*/);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check if page is accessible via keyboard navigation"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.keyboard.press('Tab'); await expect(page.getByRole('button')).toBeFocused();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Intercept network request and modify response"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.route('**/api/data', route => route.fulfill({ json: { modified: true } }));"}], "non_preferred_output": [{"role": "assistant", "content": "await page.mock();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify element has specific data attribute"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('item')).toHaveAttribute('data-id', '123');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that element text matches pattern"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('counter')).toHaveText(/\\d+ items/);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for element to have specific text"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('status')).toHaveText('Complete');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify form has been submitted successfully"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('Form submitted successfully')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that pagination shows correct page number"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('current-page')).toHaveText('2');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Navigate to next page using pagination"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Next page' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Filter table by entering search term"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByPlaceholder('Filter results').fill('John');"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Sort table by clicking column header"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('columnheader', { name: 'Date' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that table is sorted in ascending order"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('columnheader', { name: 'Date' })).toHaveAttribute('aria-sort', 'ascending');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Expand collapsible section"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Expand details' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that section content is now visible"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('section-content')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Submit form by pressing Enter in input field"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Search').press('Enter');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that search results are displayed"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByTestId('search-results')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that no results message appears"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('No results found')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Toggle dark mode switch"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('switch', { name: 'Dark mode' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify that dark theme is applied"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.locator('body')).toHaveClass(/dark-theme/);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Open user profile dropdown"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('user-menu-trigger').click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Select logout option from dropdown"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('menuitem', { name: 'Logout' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Confirm logout in confirmation dialog"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Confirm' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify user is redirected to login page"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page).toHaveURL('/login');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Check that session has ended"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByText('Please sign in')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click element with XPath //button[@data-testid='submit-btn']"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator(\"//button[@data-testid='submit-btn']\").click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Fill input field with CSS selector #username with value 'admin'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator('#username').fill('admin');"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Verify element with data-attribute data-role='notification' contains text 'Success'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.locator(\"[data-role='notification']\")).toContainText('Success');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click button inside div with class .modal-footer that has text 'Confirm'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator('.modal-footer').getByRole('button', { name: 'Confirm' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Select option with value 'premium' from dropdown with name attribute 'subscription'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator('select[name=\"subscription\"]').selectOption('premium');"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Verify input with placeholder 'Enter email address' has value 'test@example.com'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByPlaceholder('Enter email address')).toHaveValue('test@example.com');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click the nth(2) element in list with role 'listbox'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('listbox').getByRole('option').nth(2).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill textarea with id 'comments' with multiline text containing 'Line 1\\nLine 2'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator('#comments').fill('Line 1\\nLine 2');"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Verify element with aria-label 'Close dialog' is visible and enabled"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByLabel('Close dialog')).toBeVisible(); await expect(page.getByLabel('Close dialog')).toBeEnabled();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Click radio button with value 'monthly' in fieldset with legend 'Billing Cycle'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('group', { name: 'Billing Cycle' }).getByRole('radio', { name: 'monthly' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Scroll down and click on the login button with text 'Login'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.evaluate(() => window.scrollBy(0, 500)); await page.getByRole('button', { name: 'Login' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Wait for loading to finish and then verify success message appears"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('loading-spinner').waitFor({ state: 'hidden' }); await expect(page.getByText('Operation completed successfully')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill registration form: first name 'John', last name 'Doe', email 'john@example.com'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('First Name').fill('John'); await page.getByLabel('Last Name').fill('Doe'); await page.getByLabel('Email').fill('john@example.com');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Navigate to products page and wait for products to load"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.goto('/products'); await page.waitForSelector('[data-testid=\"product-list\"]');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.navigate();"}]}
{"input": {"messages": [{"role": "user", "content": "Search for 'iPhone' and verify at least 3 results are shown"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByPlaceholder('Search products').fill('iPhone'); await page.getByRole('button', { name: 'Search' }).click(); await expect(page.getByTestId('search-results').getByRole('article')).toHaveCount({ min: 3 });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Add item to cart and verify cart count increases"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const initialCount = await page.getByTestId('cart-count').textContent(); await page.getByRole('button', { name: 'Add to Cart' }).click(); await expect(page.getByTestId('cart-count')).not.toHaveText(initialCount);"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Login with username 'testuser', password 'password123', and check welcome message"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Username').fill('testuser'); await page.getByLabel('Password').fill('password123'); await page.getByRole('button', { name: 'Sign In' }).click(); await expect(page.getByText('Welcome, testuser')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Open modal, fill form data, submit and verify confirmation"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Open Form' }).click(); await page.getByLabel('Name').fill('Test User'); await page.getByLabel('Email').fill('test@example.com'); await page.getByRole('button', { name: 'Submit' }).click(); await expect(page.getByText('Form submitted successfully')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Filter table by status 'Active' and verify filtered results"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Status Filter').selectOption('Active'); await page.getByRole('button', { name: 'Apply Filter' }).click(); await expect(page.getByRole('cell', { name: 'Active' })).toHaveCount({ min: 1 });"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Scroll to element with data-testid 'footer' and click newsletter signup"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByTestId('footer').scrollIntoViewIfNeeded(); await page.getByTestId('footer').getByRole('button', { name: 'Subscribe' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Upload multiple files and verify upload progress"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Upload Files').setInputFiles(['file1.pdf', 'file2.jpg']); await expect(page.getByText('Uploading...')).toBeVisible(); await expect(page.getByText('Upload complete')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Switch tabs, perform action, and return to original tab"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "const [newTab] = await Promise.all([context.waitForEvent('page'), page.getByText('Open in New Tab').click()]); await newTab.getByRole('button', { name: 'Action' }).click(); await newTab.close(); await page.bringToFront();"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Perform drag and drop from element with id 'source' to element with id 'target'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.locator('#source').dragTo(page.locator('#target'));"}], "non_preferred_output": [{"role": "assistant", "content": "// Add automation code here"}]}
{"input": {"messages": [{"role": "user", "content": "Right-click on image, select 'Save As' from context menu"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('img', { name: 'Product Image' }).click({ button: 'right' }); await page.getByText('Save As').click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Hover over menu item 'Products' and click submenu item 'Electronics'"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('menuitem', { name: 'Products' }).hover(); await page.getByRole('menuitem', { name: 'Electronics' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Fill date picker with date '2024-12-25' using keyboard input"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Date').click(); await page.keyboard.type('12/25/2024');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.fill();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify table has exactly 10 rows and sort by 'Name' column"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await expect(page.getByRole('row')).toHaveCount(11); await page.getByRole('columnheader', { name: 'Name' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Check multiple checkboxes in a list and verify selection count"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('checkbox', { name: 'Item 1' }).check(); await page.getByRole('checkbox', { name: 'Item 2' }).check(); await expect(page.getByText('2 items selected')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Complete wizard: step 1 form, click next, step 2 form, click finish"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByLabel('Step 1 Field').fill('Value 1'); await page.getByRole('button', { name: 'Next' }).click(); await page.getByLabel('Step 2 Field').fill('Value 2'); await page.getByRole('button', { name: 'Finish' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Test keyboard navigation: tab through form fields and submit with Enter"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.keyboard.press('Tab'); await page.keyboard.type('First Value'); await page.keyboard.press('Tab'); await page.keyboard.type('Second Value'); await page.keyboard.press('Tab'); await page.keyboard.press('Enter');"}], "non_preferred_output": [{"role": "assistant", "content": "await page.type();"}]}
{"input": {"messages": [{"role": "user", "content": "Mock API call, trigger action, and verify mocked response is used"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.route('**/api/users', route => route.fulfill({ json: [{ name: 'Mock User' }] })); await page.getByRole('button', { name: 'Load Users' }).click(); await expect(page.getByText('Mock User')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Verify responsive behavior: resize to mobile, check mobile menu, resize to desktop"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.setViewportSize({ width: 375, height: 667 }); await expect(page.getByTestId('mobile-menu-toggle')).toBeVisible(); await page.setViewportSize({ width: 1200, height: 800 }); await expect(page.getByTestId('desktop-nav')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.check();"}]}
{"input": {"messages": [{"role": "user", "content": "Handle alert dialog: trigger action that shows alert, verify message, and accept"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "page.once('dialog', dialog => { expect(dialog.message()).toBe('Are you sure?'); dialog.accept(); }); await page.getByRole('button', { name: 'Delete' }).click();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}
{"input": {"messages": [{"role": "user", "content": "Test form validation: submit empty form, verify errors, fill correctly, submit successfully"}], "tools": [], "parallel_tool_calls": true}, "preferred_output": [{"role": "assistant", "content": "await page.getByRole('button', { name: 'Submit' }).click(); await expect(page.getByText('Required field')).toBeVisible(); await page.getByLabel('Name').fill('Valid Name'); await page.getByRole('button', { name: 'Submit' }).click(); await expect(page.getByText('Success')).toBeVisible();"}], "non_preferred_output": [{"role": "assistant", "content": "await page.click();"}]}

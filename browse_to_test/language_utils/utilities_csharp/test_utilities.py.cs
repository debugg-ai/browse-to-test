/// <summary>
/// Shared test utilities generated by browse-to-test.
/// </summary>

using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace TestUtilities
{

// Custom assertion helpers

// Assert that an element is visible on the page
public static async Task AssertElementVisible(IPage page, string selector)
{
    var element = page.Locator(selector).First;
    await element.WaitForAsync(new() { State = WaitForSelectorState.Visible, Timeout = 10000 });
}


// Custom exception classes

// Custom exception for test action failures
public class TestActionError : Exception
{
    public TestActionError(string message) : base(message) { }
}


// Framework-specific utilities

// Safe action execution with error handling for Playwright
// safe_action not implemented for csharp + playwright


// Robust element location and interaction for Playwright
// try_locate_and_act not implemented for csharp + playwright


// Helper functions for test actions

// Replace sensitive data placeholders in strings
public static string ReplaceSensitiveData(string text, Dictionary<string, object> sensitiveMap)
{
    if (string.IsNullOrEmpty(text))
        return text;
    
    foreach (var kvp in sensitiveMap)
    {
        var replacementValue = kvp.Value?.ToString() ?? "";
        text = text.Replace($"<secret>{kvp.Key}</secret>", replacementValue);
    }
    
    return text;
}


}
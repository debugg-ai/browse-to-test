name: Package Validation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  validate-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
    
    - name: Run pre-commit checks
      run: |
        python scripts/pre_commit_check.py
    
    - name: Run full package validation
      run: |
        python scripts/validate_package.py
    
    - name: Test built package
      run: |
        python scripts/test_built_package.py
    
    - name: Upload package artifacts
      if: matrix.python-version == '3.11'
      uses: actions/upload-artifact@v3
      with:
        name: package-artifacts
        path: |
          dist/
          build/
        retention-days: 7

  test-installation:
    runs-on: ubuntu-latest
    needs: validate-package
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Build and test package installation
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python setup.py sdist bdist_wheel
        
        # Test installation from source distribution
        pip install dist/*.tar.gz
        
        # Test basic import
        python -c "
        import browse_to_test as btt
        from browse_to_test.output_langs.registry import SupportedLanguage
        print('✅ Package installed and imports work')
        print(f'Version: {btt.__version__}')
        print(f'Languages: {[lang.value for lang in SupportedLanguage]}')
        "
        
        # Test TypeScript support specifically  
        python -c "
        import browse_to_test as btt
        config = btt.ConfigBuilder().framework('playwright').language('typescript').ai_provider('openai').build()
        print('✅ TypeScript configuration works')
        "

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        pip install -r requirements.txt
        safety check
    
    - name: Run bandit security scan
      run: |
        bandit -r browse_to_test/ -f json -o bandit-report.json || true
        bandit -r browse_to_test/ -f txt
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json
        retention-days: 30 